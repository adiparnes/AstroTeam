{"ast":null,"code":"var _jsxFileName = \"/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/task/pages/Dashboard.js\";\nimport React, { Component } from 'react';\nimport TaskList from '../components/TaskList';\nimport './Dashboard.scss';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lists: [],\n      tasks: []\n    };\n\n    this.onClickListHanlder = listId => {\n      axios.get(`http://localhost:3001/lists/${listId}/tasks`).then(res => {\n        this.setState({\n          tasks: res.data\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.onClickHandler = () => {};\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3001/lists\").then(res => {\n      this.setState({\n        lists: res.data\n      });\n    }); // default list with its tasks\n\n    if (this.state.lists.length) {\n      axios.get(`http://localhost:3001/lists/${this.state.lists[0].listId}/tasks`).then(res => {\n        this.setState({\n          tasks: res.data\n        });\n        console.log(res.data);\n      });\n    }\n  }\n\n  render() {\n    const {\n      lists,\n      tasks\n    } = this.state;\n    const listLists = !lists.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"No lists added\") : lists.map(list => {\n      return React.createElement(\"div\", {\n        onClick: () => this.onClickListHanlder(list._id),\n        className: \"list-menu-item\",\n        key: list._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, list.title));\n    });\n    return React.createElement(\"div\", {\n      className: \"centered-content m-t-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"task-manager-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar has-background-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title has-text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Lists\"), React.createElement(\"div\", {\n      className: \"list-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, listLists), React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      className: \"button is-primary has-text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"+ New List\")), React.createElement(\"div\", {\n      className: \"tasks-list-container has-background-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title has-text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Tasks\"), React.createElement(TaskList, {\n      tasks: tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/task/pages/Dashboard.js"],"names":["React","Component","TaskList","axios","Dashboard","state","lists","tasks","onClickListHanlder","listId","get","then","res","setState","data","console","log","onClickHandler","componentDidMount","length","render","listLists","map","list","_id","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TaskList from '../components/TaskList';\nimport './Dashboard.scss';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n\n    state = {\n        lists: [],\n        tasks: []\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:3001/lists\").then(res => {\n            this.setState({\n                lists: res.data\n            });\n        });\n\n        // default list with its tasks\n        if (this.state.lists.length) {\n            axios.get(`http://localhost:3001/lists/${this.state.lists[0].listId}/tasks`).then(res => {\n                this.setState({\n                    tasks: res.data\n                });\n                console.log(res.data);\n            });\n        }\n    }\n\n    onClickListHanlder = (listId) => {\n        axios.get(`http://localhost:3001/lists/${listId}/tasks`).then(res => {\n            this.setState({\n                tasks: res.data\n            });\n            console.log(res.data);\n        });\n\n    }\n\n    onClickHandler = () => {\n\n    }\n\n    render() {\n        const { lists, tasks } = this.state;\n        const listLists = !lists.length ? (<div>No lists added</div>) : (\n            lists.map(list => {\n                return (\n                    <div onClick={() => this.onClickListHanlder(list._id)} className=\"list-menu-item\" key={list._id}>\n                        <p>{list.title}</p>\n                    </div>\n                )\n            })\n        )\n\n        return (\n\n            <div className=\"centered-content m-t-xl\">\n                <div className=\"task-manager-container\">\n\n                    {/* leftside - name of lists */}\n                    <div className=\"sidebar has-background-white\">\n                        <h1 className=\"title has-text-primary\">Lists</h1>\n                        <div className=\"list-menu\">{listLists}</div>\n\n                        <button onClick={this.onClickHandler} className=\"button is-primary has-text-white\">+ New List</button>\n\n                    </div>\n\n                    {/* rightside - list with all its tasks */}\n                    <div className=\"tasks-list-container has-background-light\">\n                        <h1 className=\"title has-text-primary\">Tasks</h1>\n                        <TaskList tasks={tasks} />\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}