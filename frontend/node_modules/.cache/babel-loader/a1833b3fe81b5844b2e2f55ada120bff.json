{"ast":null,"code":"var _jsxFileName = \"/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'; // components\n\nimport Navbar from './shared/components/Navbar';\nimport Home from './home/components/Home';\nimport Dashboard from './task/pages/Dashboard';\nimport NewList from './task/pages/NewList';\nimport EditTask from './task/pages/EditTask';\nimport CreateTask from './task/pages/CreateTask';\nimport Login from './auth/Login';\nimport Profile from './auth/Profile';\nimport UserContext from './UserContext';\nimport axios from 'axios'; // scss\n\nimport './index.scss';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:3001/auth/login/success\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(response => {\n      if (response.status === 200) return response.json();\n      throw new Error(\"failed to authenticate user\");\n    }).then(responseJson => {\n      this.setState({\n        authenticated: true,\n        user: responseJson.user\n      });\n    }).catch(error => {\n      this.setState({\n        authenticated: false,\n        error: \"Failed to authenticate user\"\n      });\n    });\n  });\n  return React.createElement(UserContext.Provider, {\n    value: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/auth/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/profile\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/:listId\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/:listId/tasks\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/new-list\",\n    component: NewList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/create-task/:listId\",\n    component: CreateTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/:listId/tasks/:taskId\",\n    component: EditTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Navbar","Home","Dashboard","NewList","EditTask","CreateTask","Login","Profile","UserContext","axios","App","user","setUser","fetch","method","credentials","headers","Accept","then","response","status","json","Error","responseJson","setState","authenticated","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n// components\nimport Navbar from './shared/components/Navbar';\nimport Home from './home/components/Home';\nimport Dashboard from './task/pages/Dashboard';\nimport NewList from './task/pages/NewList';\nimport EditTask from './task/pages/EditTask';\nimport CreateTask from './task/pages/CreateTask';\nimport Login from './auth/Login';\nimport Profile from './auth/Profile';\nimport UserContext from './UserContext';\nimport axios from 'axios';\n// scss\nimport './index.scss';\n\nfunction App() {\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/auth/login/success\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      }\n    })\n      .then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed to authenticate user\");\n      })\n      .then(responseJson => {\n        this.setState({\n          authenticated: true,\n          user: responseJson.user\n        });\n      })\n      .catch(error => {\n        this.setState({\n          authenticated: false,\n          error: \"Failed to authenticate user\"\n        });\n      });\n\n  })\n\n  return (\n    <UserContext.Provider value={user}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/auth/login\" component={Login} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route exact path='/' component={Home} />\n          <Route exact path='/dashboard' component={Dashboard} />\n          <Route exact path='/dashboard/:listId' component={Dashboard} />\n          <Route exact path='/dashboard/:listId/tasks' component={Dashboard} />\n          <Route exact path='/new-list' component={NewList} />\n          <Route exact path='/create-task/:listId' component={CreateTask} />\n          <Route exact path='/dashboard/:listId/tasks/:taskId' component={EditTask} />\n        </div>\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}