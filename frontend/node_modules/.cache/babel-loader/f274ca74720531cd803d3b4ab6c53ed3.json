{"ast":null,"code":"var _jsxFileName = \"/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom'; // components\n\nimport Navbar from './shared/components/Navbar';\nimport Home from './home/components/Home';\nimport Dashboard from './task/pages/Dashboard';\nimport NewList from './task/pages/NewList';\nimport EditTask from './task/pages/EditTask';\nimport CreateTask from './task/pages/CreateTask';\nimport Login from './auth/Login';\nimport Profile from './auth/Profile';\nimport UserContext from './UserContext';\nimport axios from 'axios'; // scss\n\nimport './index.scss';\n\nfunction App() {\n  const [user, setUser] = useState({\n    isLoggedIn: false,\n    profile: {}\n  });\n  useEffect(() => {\n    axios.get('http://localhost:3001/', {\n      withCredentials: true\n    }).then(res => {\n      getAuthUser(res.data.user, res.data.authenticated);\n    });\n  }, []);\n\n  const getAuthUser = (userId, auth) => {\n    axios.get(`http://localhost:3001/users/${userId}`).then(res => {\n      setUser({\n        isLoggedIn: auth,\n        profile: res.data[0]\n      });\n    });\n  };\n\n  let routes;\n\n  if (user.isLoggedIn) {\n    routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(UserContext.Provider, {\n    value: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/auth/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/profile\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/:listId\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/:listId/tasks\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/new-list\",\n    component: NewList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/create-task/:listId\",\n    component: CreateTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/:listId/tasks/:taskId\",\n    component: EditTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Redirect","Switch","Navbar","Home","Dashboard","NewList","EditTask","CreateTask","Login","Profile","UserContext","axios","App","user","setUser","isLoggedIn","profile","get","withCredentials","then","res","getAuthUser","data","authenticated","userId","auth","routes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n// components\nimport Navbar from './shared/components/Navbar';\nimport Home from './home/components/Home';\nimport Dashboard from './task/pages/Dashboard';\nimport NewList from './task/pages/NewList';\nimport EditTask from './task/pages/EditTask';\nimport CreateTask from './task/pages/CreateTask';\nimport Login from './auth/Login';\nimport Profile from './auth/Profile';\nimport UserContext from './UserContext';\nimport axios from 'axios';\n// scss\nimport './index.scss';\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    isLoggedIn: false,\n    profile: {}\n  });\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/', { withCredentials: true }).then(res => {\n      getAuthUser(res.data.user, res.data.authenticated);\n    });\n  }, []);\n\n  const getAuthUser = (userId, auth) => {\n    axios.get(`http://localhost:3001/users/${userId}`).then(res => {\n      setUser({\n        isLoggedIn: auth,\n        profile: res.data[0]\n      });\n    });\n  }\n\n  let routes;\n\n  if (user.isLoggedIn) {\n    routes = (\n      <Switch>\n        <Route exact path='/' component={Home} />\n      </Switch>\n    )\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/auth/login\" component={Login} />\n          <Route path=\"/profile\" component={Profile} />\n          {/* <Route exact path='/' component={Home} /> */}\n          <Route exact path='/dashboard' component={Dashboard} />\n          <Route exact path='/dashboard/:listId' component={Dashboard} />\n          <Route exact path='/dashboard/:listId/tasks' component={Dashboard} />\n          <Route exact path='/new-list' component={NewList} />\n          <Route exact path='/create-task/:listId' component={CreateTask} />\n          <Route exact path='/dashboard/:listId/tasks/:taskId' component={EditTask} />\n        </div>\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}