{"ast":null,"code":"var _jsxFileName = \"/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/task/pages/Dashboard.js\";\nimport React, { Component } from 'react';\nimport TaskList from '../components/TaskList';\nimport './Dashboard.scss';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lists: [],\n      tasks: []\n    };\n\n    this.onClickListHanlder = () => {\n      axios.get(\"http://localhost:3001/lists/:listId/tasks\").then(res => {\n        this.setState({\n          tasks: res.data\n        });\n      });\n      console.log(\"the state:\" + this.state);\n    };\n\n    this.onClickHandler = () => {};\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3001/lists\").then(res => {\n      this.setState({\n        lists: res.data\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.lists);\n    const {\n      lists\n    } = this.state;\n    const listLists = !lists.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"No lists added\") : lists.map(list => {\n      return React.createElement(\"div\", {\n        onClick: this.onClickListHanlder,\n        className: \"list-menu-item\",\n        key: list._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, list.title));\n    });\n    return React.createElement(\"div\", {\n      className: \"centered-content m-t-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"task-manager-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar has-background-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title has-text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Lists\"), React.createElement(\"div\", {\n      className: \"list-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, listLists), React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      className: \"button is-primary has-text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"+ New List\")), React.createElement(\"div\", {\n      className: \"tasks-list-container has-background-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title has-text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Tasks\"), React.createElement(TaskList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/task/pages/Dashboard.js"],"names":["React","Component","TaskList","axios","Dashboard","state","lists","tasks","onClickListHanlder","get","then","res","setState","data","console","log","onClickHandler","componentDidMount","render","listLists","length","map","list","_id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BI,KAF8B,GAEtB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAFsB;;AAAA,SAe9BC,kBAf8B,GAeT,MAAM;AACvBL,MAAAA,KAAK,CAACM,GAAN,CAAU,2CAAV,EAAuDC,IAAvD,CAA4DC,GAAG,IAAI;AAC/D,aAAKC,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAEI,GAAG,CAACE;AADD,SAAd;AAGH,OAJD;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAe,KAAKV,KAAhC;AACH,KAtB6B;;AAAA,SAwB9BW,cAxB8B,GAwBb,MAAM,CAEtB,CA1B6B;AAAA;;AAO9BC,EAAAA,iBAAiB,GAAG;AAChBd,IAAAA,KAAK,CAACM,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA8CC,GAAG,IAAI;AACjD,WAAKC,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAEK,GAAG,CAACE;AADD,OAAd;AAGH,KAJD;AAKH;;AAeDK,EAAAA,MAAM,GAAG;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,KAAvB;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAMc,SAAS,GAAG,CAACb,KAAK,CAACc,MAAP,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAjB,GACdd,KAAK,CAACe,GAAN,CAAUC,IAAI,IAAI;AACd,aACI;AAAK,QAAA,OAAO,EAAE,KAAKd,kBAAnB;AAAuC,QAAA,SAAS,EAAC,gBAAjD;AAAkE,QAAA,GAAG,EAAEc,IAAI,CAACC,GAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,IAAI,CAACE,KAAT,CADJ,CADJ;AAKH,KAND,CADJ;AAUA,WAEI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BL,SAA5B,CAFJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKH,cAAtB;AAAsC,MAAA,SAAS,EAAC,kCAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CAHJ,EAYI;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZJ,CADJ,CAFJ;AAuBH;;AAhE6B;;AAmElC,eAAeZ,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport TaskList from '../components/TaskList';\nimport './Dashboard.scss';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n\n    state = {\n        lists: [],\n        tasks: []\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:3001/lists\").then(res => {\n            this.setState({\n                lists: res.data\n            });\n        });\n    }\n\n    onClickListHanlder = () => {\n        axios.get(\"http://localhost:3001/lists/:listId/tasks\").then(res => {\n            this.setState({\n                tasks: res.data\n            });\n        });\n        console.log(\"the state:\" + this.state);\n    }\n\n    onClickHandler = () => {\n\n    }\n\n    render() {\n        console.log(this.state.lists);\n        const { lists } = this.state;\n        const listLists = !lists.length ? (<div>No lists added</div>) : (\n            lists.map(list => {\n                return (\n                    <div onClick={this.onClickListHanlder} className=\"list-menu-item\" key={list._id}>\n                        <p>{list.title}</p>\n                    </div>\n                )\n            })\n        )\n\n        return (\n\n            <div className=\"centered-content m-t-xl\">\n                <div className=\"task-manager-container\">\n\n                    {/* leftside - name of lists */}\n                    <div className=\"sidebar has-background-white\">\n                        <h1 className=\"title has-text-primary\">Lists</h1>\n                        <div className=\"list-menu\">{listLists}</div>\n\n                        <button onClick={this.onClickHandler} className=\"button is-primary has-text-white\">+ New List</button>\n\n                    </div>\n\n                    {/* rightside - list with all its tasks */}\n                    <div className=\"tasks-list-container has-background-light\">\n                        <h1 className=\"title has-text-primary\">Tasks</h1>\n                        <TaskList />\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}