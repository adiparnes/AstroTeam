{"ast":null,"code":"var _jsxFileName = \"/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/task/pages/Dashboard.js\";\nimport React, { Component } from 'react';\nimport TaskList from '../components/TaskList';\nimport Modal from '../../shared/components/Modal';\nimport './Dashboard.scss';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lists: [],\n      tasks: [],\n      showModal: false\n    };\n\n    this.listHandler = listId => {\n      axios.get(`http://localhost:3001/lists/${listId}/tasks`).then(res => {\n        this.setState({\n          tasks: res.data\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.hideModal = () => {\n      this.state.showModal = false;\n    };\n\n    this.showModal = () => {\n      this.state.showModal = true;\n    };\n\n    this.addListHandler = () => {// axios.post('http://localhost:3001/lists').then(res => {\n      //     console.log(res);\n      // })\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3001/lists\").then(res => {\n      this.setState({\n        lists: res.data\n      }); // default 1st list with its tasks\n\n      if (this.state.lists.length) {\n        this.listHandler(this.state.lists[0]._id);\n      }\n    });\n  }\n\n  render() {\n    const {\n      lists,\n      tasks\n    } = this.state;\n    const listLists = !lists.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"No lists added\") : lists.map(list => {\n      return React.createElement(\"div\", {\n        onClick: () => this.listHandler(list._id),\n        className: \"list-menu-item\",\n        key: list._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, list.title));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: \"Create New List\",\n      content: \"The is subtitle for creating a list\",\n      showModal: this.state.showModal,\n      closeModal: this.hideModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"centered-content m-t-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"task-manager-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar has-background-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title has-text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Lists\"), React.createElement(\"div\", {\n      className: \"list-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, listLists), React.createElement(\"button\", {\n      onClick: this.addListHandler,\n      className: \"button is-primary has-text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"+ New List\")), React.createElement(\"div\", {\n      className: \"tasks-list-container has-background-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title has-text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Tasks\"), React.createElement(TaskList, {\n      tasks: tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/Ron/Desktop/Studies/Projects/MERN/task-manager/frontend/src/task/pages/Dashboard.js"],"names":["React","Component","TaskList","Modal","axios","Dashboard","state","lists","tasks","showModal","listHandler","listId","get","then","res","setState","data","console","log","hideModal","addListHandler","componentDidMount","length","_id","render","listLists","map","list","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TaskList from '../components/TaskList';\nimport Modal from '../../shared/components/Modal';\nimport './Dashboard.scss';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n\n    state = {\n        lists: [],\n        tasks: [],\n        showModal: false\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:3001/lists\").then(res => {\n            this.setState({\n                lists: res.data\n            });\n            // default 1st list with its tasks\n            if (this.state.lists.length) {\n                this.listHandler(this.state.lists[0]._id);\n            }\n        });\n    }\n\n    listHandler = (listId) => {\n        axios.get(`http://localhost:3001/lists/${listId}/tasks`).then(res => {\n            this.setState({\n                tasks: res.data\n            });\n            console.log(res.data);\n        });\n    }\n\n    hideModal = () => {\n        this.state.showModal = false;\n    }\n\n    showModal = () => {\n        this.state.showModal = true;\n    }\n\n    addListHandler = () => {\n\n\n\n        // axios.post('http://localhost:3001/lists').then(res => {\n        //     console.log(res);\n        // })\n    }\n\n    render() {\n        const { lists, tasks } = this.state;\n        const listLists = !lists.length ? (<div>No lists added</div>) : (\n            lists.map(list => {\n                return (\n                    <div onClick={() => this.listHandler(list._id)} className=\"list-menu-item\" key={list._id}>\n                        <p>{list.title}</p>\n                    </div>\n                )\n            })\n        )\n\n        return (\n            <div>\n                <Modal\n                    title=\"Create New List\"\n                    content=\"The is subtitle for creating a list\"\n                    showModal={this.state.showModal}\n                    closeModal={this.hideModal}\n                />\n                <div className=\"centered-content m-t-xl\">\n                    <div className=\"task-manager-container\">\n\n                        {/* leftside - name of lists */}\n                        <div className=\"sidebar has-background-white\">\n                            <h1 className=\"title has-text-primary\">Lists</h1>\n                            <div className=\"list-menu\">{listLists}</div>\n\n                            <button onClick={this.addListHandler} className=\"button is-primary has-text-white\">+ New List</button>\n\n                        </div>\n\n                        {/* rightside - list with all its tasks */}\n                        <div className=\"tasks-list-container has-background-light\">\n                            <h1 className=\"title has-text-primary\">Tasks</h1>\n                            <TaskList tasks={tasks} />\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}